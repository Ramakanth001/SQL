-- MySQL documentaion 
https://dev.mysql.com/doc/refman/8.4/en/

-- Execute SQL under cursor
Ctrl + Enter

-- Execute all queries in file
Shift + Ctrl + Enter

-- Get current date and time
select sysdate() from dual;

-- (While inserting a row, if no value is provided for name or age, the default values would be inserted but this is not redundant because even though the insert can never be null since you have default, it is possible that you can insert a NULL value manually)

-- Writing NOT NULL constraint for a priamry key is reduntant

-- If you add an out of order column value to an AUTO-INCREMENT enabled row, next auto increment will happen from there. For example if the current sequence of cat_id is 20 and if you manually insert a row with cat_id 25, next insertions will happen from 26 not 21

-- Where conditionals are not case sensitive (where name = eGg = Egg = eGG)

-- Safe update mode prevents UPDATE or DELETE without a WHERE clause using a key column or LIMIT. Safe update mode can be disabled by Edit --> Preferences --> SQl Editor --> Un-check the Safe Updates check box

-- You do NOT have master brackets for multiple row inserts like in the case of craete table command

-- You can NOT give AND condition to seperate multiple condiionals in SET clause. You need to use comma instead

-- `CONCAT` joins strings without a separator, while `CONCAT_WS` joins strings with a specified separator.

-- SUBSTR() == SUBSTRING()

-- REPLACE() function does NOT change data in the tables. It just does it and displays

-- REPLACE() fun is case sensitive

-- CHAR_LENGTH (Gives us number of characters) and LENGTH (Gives us bytes) In case you are using chinese, 2 characters (char_length) can take 6 bytes(length)

-- GROUP BY (summarizes or aggregates identical data into single rows)

-- GROUP BY groups rows with the same values into a single row, often used with aggregate functions like SUM or COUNT. In the GROUP BY operation, groups are formed and temporarily stored in memory (or disk if necessary) during query execution but are not directly displayed.

-- ORDER BY (simply sorts) arranges rows in ascending or descending order based on one or more columns.

-- DATA TYPES
TINYINT - 1 byte
SMALLINT - 2 bytes
MEDIUMINT - 3 bytes
INT - 4 bytes
BIGINT - 8 bytes

-- DECIMAL(5,2) means total of 5 letters (interger (3)+fractional(2) = 5) ex:- 999.99 

-- FLOAT OCCUPIES 4 BYTES - 7 digits precision

-- DOUBLE OCCUPIES 8 BYTES - 15 digits precision

-- If accuracy is not too important or if speed is this highest priority, the DOUBLE type may be good enough. For high precision, you can always convert to a fixed-point type stored in a BIGINT. This enables you to do all calculations with 64-bit integers and then convert results back to floating-point values as necessary.

-- IMP: Timestamp takes up less storage than DATETIME but TIMESTAMP has less range of years

-- Database	TIMESTAMP Range (Not DATETIME)
MySQL	1970-01-01 00:00:01 UTC to 2038-01-19 03:14:07 UTC
PostgreSQL	4713 BC to 294276 AD
Oracle	4712 BC to 9999 AD
SQL Server	1753-01-01 00:00:00 to 9999-12-31 23:59:59.997

-- CURDATE() = CURRENT_DATE(),... similar for time, etc